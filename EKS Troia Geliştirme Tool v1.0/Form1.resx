<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RichAlp.Text" xml:space="preserve">
    <value>OBJECT: 
 STRING ALPPUROFFTEXT;


IF IASPUROFFHEAD_INSERTED THEN
	SET IASPUROFFHEAD_ISDELETE TO DISABLE;
ENDIF;


IF MODI == 0 THEN
	MOVE         SYS_CLIENT   TO        IASPUROFFHEAD_CLIENT;
	MOVE         SCCOMPANY    TO        IASPUROFFHEAD_COMPANY;
	MOVE         SCPLANT      TO        IASPUROFFHEAD_PLANT;
	MOVE         SCBUSAREA    TO        IASPUROFFHEAD_BUSAREA;
	MOVE         SCOFFERTYPE  TO        IASPUROFFHEAD_OFFERTYPE;
	MOVE         SCVALIDFROM  TO        IASPUROFFHEAD_VALIDFROM;
	MOVE         VALIDUNTIL   TO        IASPUROFFHEAD_VALIDUNTIL;
	MOVE         SCMATERIAL   TO        IASPUROFFHEAD_MATERIAL;
	MOVE         SCSTEXT      TO        IASPUROFFHEAD_STEXT;
	MOVE         SCQUANTITY   TO        IASPUROFFHEAD_QUANTITY;
	MOVE         SCPURUNIT    TO        IASPUROFFHEAD_PURUNIT;
	MOVE         SYS_USER     TO        IASPUROFFHEAD_CREATEDBY;
	MOVE         SYS_CURRENTDATE  TO        IASPUROFFHEAD_CREATEDAT;
	/* ALP HT/3864 START*/
	MOVE SCLTEXT TO IASPUROFFHEAD_LTEXT;
	/* ALP HT/3864 END*/
	SET PRINT TO DISABLE;
	SET CREATEOFFER TO DISABLE;
ENDIF;


IF MODI == 1 THEN
	MOVE         SYS_USER         TO        IASPUROFFHEAD_CHANGEDBY;
	MOVE         SYS_CURRENTDATE  TO        IASPUROFFHEAD_CHANGEDAT;
ENDIF;


IF MODI == 2 THEN
	SET IASPUROFFHEAD_ISDELETE TO DISABLE;
	SET UPDATE TO DISABLE;
	SET CREATEOFFER TO DISABLE;
ENDIF;

SET     IASPUROFFHEAD_VALIDFROM TO DISABLE;
SET     IASPUROFFHEAD_VALIDUNTIL TO DISABLE;
SET     IASPUROFFHEAD_COMPANY TO REFRESH;
SET     IASPUROFFHEAD_PLANT TO REFRESH;
SET     IASPUROFFHEAD_BUSAREA TO REFRESH;
SET     IASPUROFFHEAD_OFFERTYPE TO REFRESH;
SET     IASPUROFFHEAD_VALIDFROM TO REFRESH;
SET     IASPUROFFHEAD_VALIDUNTIL TO REFRESH;
SET     IASPUROFFHEAD_MATERIAL TO REFRESH;
SET     IASPUROFFHEAD_STEXT TO REFRESH;
SET     IASPUROFFHEAD_QUANTITY TO REFRESH;
SET     IASPUROFFHEAD_PURUNIT TO REFRESH;
SET     IASPUROFFHEAD_CREATEDBY TO REFRESH;
SET     IASPUROFFHEAD_CREATEDAT TO REFRESH;
/* ALP HT/3864 START*/
SET     IASPUROFFHEAD_LTEXT TO REFRESH;
/* ALP HT/3864 END*/
SET IASPUROFFHEAD_RFQNUM TO REFRESH;
FOUND = 0;

LOOP AT IASPUROFFTEXT 
BEGIN

	IF IASPUROFFTEXT_LANGU == SYS_LANGU THEN
		FOUND = 1;
		BREAK;
	ENDIF;

ENDLOOP;


IF FOUND == 0 THEN
	APPEND ROW TO IASPUROFFTEXT;
	MOVE SYS_CLIENT               TO IASPUROFFTEXT_CLIENT;
	MOVE SYS_LANGU                TO IASPUROFFTEXT_LANGU;
	MOVE IASPUROFFHEAD_COMPANY    TO IASPUROFFTEXT_COMPANY;
	MOVE IASPUROFFHEAD_PLANT      TO IASPUROFFTEXT_PLANT;
	MOVE IASPUROFFHEAD_OFFERTYPE  TO IASPUROFFTEXT_OFFERTYPE;
	MOVE IASPUROFFHEAD_OFFERNUM   TO IASPUROFFTEXT_OFFERNUM;
	MOVE IASPUROFFHEAD_VALIDFROM  TO IASPUROFFTEXT_VALIDFROM;
	MOVE IASPUROFFHEAD_VALIDUNTIL TO IASPUROFFTEXT_VALIDUNTIL;
	MOVE IASPUROFFHEAD_STEXT  TO IASPUROFFTEXT_STEXT;
	/*hcbayram malzeme için varyant bilgisi*/

	IF ALPVARSTRFORRFQ!='' THEN
		ALPPUROFFTEXT=IASPUROFFHEAD_LTEXT +'  '+ALPVARSTRFORRFQ;
	ENDIF;

	/* ALP HT/3864 START*/
	MOVE ALPPUROFFTEXT     TO IASPUROFFTEXT_LTEXT;
	/* ALP HT/3864 END*/
ENDIF;

FOUND = 0;
THIS.PAINTTABLE();
SELECT MATERIAL,SCROLLNUM,DRAWVER,DRAWNUM,
	CHANGNUM,CHANGMESS 
	FROM IASMATBASIC 
	WHERE CLIENT = SYS_CLIENT 
		AND COMPANY = IASPUROFFHEAD_COMPANY 
		AND MATERIAL = IASPUROFFHEAD_MATERIAL 
	INTO ALPTMPPUROFF;

MOVE ALPTMPPUROFF_SCROLLNUM TO DTSCROLLNUM;
MOVE ALPTMPPUROFF_DRAWVER TO DTDRAWVER;
MOVE ALPTMPPUROFF_DRAWNUM TO DTDRAWNUM;
MOVE ALPTMPPUROFF_CHANGNUM TO DTCHANGNUM;
MOVE ALPTMPPUROFF_CHANGMESS TO DTCHANGMESS;
SET DTSCROLLNUM TO DISABLE;
SET DTDRAWVER TO DISABLE;
SET DTDRAWNUM TO DISABLE;
SET DTCHANGNUM TO DISABLE;
SET DTCHANGMESS TO DISABLE;
</value>
  </data>
  <data name="RichİAS.Text" xml:space="preserve">
    <value>YESTERDAY = SUBDAYS(SYS_CURRENTDATE,1);

IF IASPUROFFHEAD_INSERTED THEN
	SET IASPUROFFHEAD_ISDELETE TO DISABLE;
ENDIF;


IF MODI == 0 THEN
	MOVE SYS_CLIENT TO IASPUROFFHEAD_CLIENT;
	/*ahmetozdemir,hl:7366*/
	   /*
        MOVE         SCCOMPANY    TO        IASPUROFFHEAD_COMPANY;
        MOVE         SCPLANT      TO        IASPUROFFHEAD_PLANT;
        MOVE         SCBUSAREA    TO        IASPUROFFHEAD_BUSAREA;
        MOVE         SCOFFERTYPE  TO        IASPUROFFHEAD_OFFERTYPE;
        MOVE         SCVALIDFROM  TO        IASPUROFFHEAD_VALIDFROM;
        MOVE         VALIDUNTIL   TO        IASPUROFFHEAD_VALIDUNTIL;
        MOVE         SCMATERIAL   TO        IASPUROFFHEAD_MATERIAL;
        MOVE         SCSTEXT      TO        IASPUROFFHEAD_STEXT;
        MOVE         SCQUANTITY   TO        IASPUROFFHEAD_QUANTITY;
        MOVE         SCPURUNIT    TO        IASPUROFFHEAD_PURUNIT;
        */
	/*ahmetozdemir,hl:7366*/
	MOVE SYS_USER TO IASPUROFFHEAD_CREATEDBY;
	MOVE SYS_CURRENTDATE TO IASPUROFFHEAD_CREATEDAT;
	/*564*/
	MOVE IASBAS001_LANGU TO IASPUROFFHEAD_LANGU;
	/*564*/
	SET PRINT TO DISABLE;
	SET CREATEOFFER TO DISABLE;
	THIS.CALCQUANTITYX();
ENDIF;


IF MODI == 1 THEN
	MOVE SYS_USER TO IASPUROFFHEAD_CHANGEDBY;
	MOVE SYS_CURRENTDATE TO IASPUROFFHEAD_CHANGEDAT;
ENDIF;


IF MODI == 2 THEN
	SET IASPUROFFHEAD_ISDELETE TO DISABLE;
	SET UPDATE TO DISABLE;
	SET CREATEOFFER TO DISABLE;
ENDIF;

SET IASPUROFFHEAD_VALIDFROM TO DISABLE;
/*ahmetozdemir,hl:7366*/

IF MODI == 2 
		|| (IASPUROFFHEAD_VALIDUNTIL &lt; SYS_CURRENTDATE) THEN
	SET IASPUROFFHEAD_VALIDUNTIL TO DISABLE;
ENDIF;

PREVIEW = 1;
/*ahmetozdemir,hl:7366*/
SET     IASPUROFFHEAD_COMPANY TO REFRESH;
SET     IASPUROFFHEAD_PLANT TO REFRESH;
SET     IASPUROFFHEAD_BUSAREA TO REFRESH;
SET     IASPUROFFHEAD_OFFERTYPE TO REFRESH;
SET     IASPUROFFHEAD_VALIDFROM TO REFRESH;
SET     IASPUROFFHEAD_VALIDUNTIL TO REFRESH;
SET     IASPUROFFHEAD_MATERIAL TO REFRESH;
SET     IASPUROFFHEAD_STEXT TO REFRESH;
SET     IASPUROFFHEAD_QUANTITY TO REFRESH;
SET     IASPUROFFHEAD_PURUNIT TO REFRESH;
SET     IASPUROFFHEAD_CREATEDBY TO REFRESH;
SET     IASPUROFFHEAD_CREATEDAT TO REFRESH;
FOUND = 0;

LOOP AT IASPUROFFTEXT 
BEGIN

	IF IASPUROFFTEXT_LANGU == SYS_LANGU THEN
		FOUND = 1;
		BREAK;
	ENDIF;

ENDLOOP;


IF FOUND == 0 THEN
	/*3501*/
	CLEAR ALL IASPUROFFTEXT;
	/*3501*/
	APPEND ROW TO IASPUROFFTEXT;
	MOVE SYS_CLIENT               TO IASPUROFFTEXT_CLIENT;
	MOVE SYS_LANGU                TO IASPUROFFTEXT_LANGU;
	MOVE IASPUROFFHEAD_COMPANY    TO IASPUROFFTEXT_COMPANY;
	MOVE IASPUROFFHEAD_PLANT      TO IASPUROFFTEXT_PLANT;
	MOVE IASPUROFFHEAD_OFFERTYPE  TO IASPUROFFTEXT_OFFERTYPE;
	MOVE IASPUROFFHEAD_OFFERNUM   TO IASPUROFFTEXT_OFFERNUM;
	MOVE IASPUROFFHEAD_VALIDFROM  TO IASPUROFFTEXT_VALIDFROM;
	MOVE IASPUROFFHEAD_VALIDUNTIL TO IASPUROFFTEXT_VALIDUNTIL;
	MOVE IASPUROFFHEAD_STEXT      TO IASPUROFFTEXT_STEXT;
	MOVE IASMAT_LTEXT TO IASPUROFFTEXT_LTEXT;
ENDIF;

FOUND = 0;
THIS.PAINTTABLE();

IF VOPTIONSTEXT == '' THEN
	THIS.GETOPTIONTEXT();
ENDIF;

/*TH 564*/
CLEAR ALL FILEITEMS;
SET DOCUMENT TO DISABLE;

IF IASPUR002_ISATTACHFILES == 1 THEN
	SET DOCUMENT TO ENABLE;

	IF MODI != 0 THEN
		PURDOCREC.FETCH(IASPUROFFHEAD_COMPANY, IASPUROFFHEAD_OFFERTYPE, IASPUROFFHEAD_OFFERNUM, '', IASPUROFFHEAD_LANGU, IASPUR002_DOCTYPEATF);
	ENDIF;

ENDIF;

 /*TH 564*/
</value>
  </data>
</root>